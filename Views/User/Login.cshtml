@model Assign1.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2>@ViewData["Title"]</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (ViewBag.LoginError != null)
{
    <div class="alert alert-danger">
        @ViewBag.LoginError
    </div>
}

<form asp-action="Login">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="UsernameOrEmail" class="control-label"></label>
        <input asp-for="UsernameOrEmail" class="form-control" />
        <span asp-validation-for="UsernameOrEmail" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <div class="checkbox">
            <label asp-for="RememberMe">
                <input asp-for="RememberMe" />
                @Html.DisplayNameFor(m => m.RememberMe)
            </label>
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Login" class="btn btn-default" />
    </div>
</form>

<div class="form-group">
    <p>
        Don't have an account? <a href="@Url.Action("Register", "User")">Register</a>
    </p>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
